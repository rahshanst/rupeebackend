swagger: "2.0"
info:
  title: Admin API
  description: API for managing admin 
  version: 1.0.0

basePath: /api/admin

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Bearer token for authentication

paths:
  /login:
    post:
      summary: Search for a hotel
      description: Search for a hotel with authentication
      operationId: login
      x-swagger-router-controller: authController
      consumes:
        - application/json
      produces:
        - application/json
      tags: 
        -  Auth
      parameters:
        - in: body
          name: loginData
          description: loginData
          required: true
          schema:
            $ref: '#/definitions/loginData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getUserSetting:
    post:
      summary: Search for a hotel
      description: Search for a hotel with authentication
      operationId: getUserSetting
      x-swagger-router-controller: authController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Auth
      parameters:
        - in: body
          name: loginData
          description: loginData
          required: true
          schema:
            $ref: '#/definitions/getUserSettingData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateuserData:
    post:
      summary: Search for a hotel
      description: Search for a hotel with authentication
      operationId: updateuserData
      x-swagger-router-controller: authController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Auth
      parameters:
        - in: body
          name: loginData
          description: loginData
          required: true
          schema:
            $ref: '#/definitions/updateuserDataData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /changePassword:
    post:
      summary: Search for a hotel
      description: Search for a hotel with authentication
      operationId: changePassword
      x-swagger-router-controller: authController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Auth
      parameters:
        - in: body
          name: loginData
          description: loginData
          required: true
          schema:
            $ref: '#/definitions/changePasswordData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getDashboardCount:
    post:
      summary: getDashboardCount
      description: getDashboardCount
      operationId: getDashboardCount
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Bank Config
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: BankConfig
          description: BankConfig
          required: true
          schema:
            $ref: '#/definitions/dashboardData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getConstantValue:
    get:
      summary: Search for a hotel
      description: Search for a hotel with authentication
      operationId: getConstantValue
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getCategoryDetails:
    post:
      operationId: getCategoryDetails
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: getData
          description: getData
          required: true
          schema:
            $ref: '#/definitions/getData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getTransactionDetails:
    post:
      operationId: getTransactionDetails
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: getData
          description: getData
          required: true
          schema:
            $ref: '#/definitions/getData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getBannerDetails:
    get:
      operationId: getBannerFile
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        # - in: body
        #   name: getData
        #   description: getData
        #   required: true
        #   schema:
        #     $ref: '#/definitions/getData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getBrandDetails:
    post:
      operationId: getBrandDetails
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: getData
          description: getData
          required: true
          schema:
            $ref: '#/definitions/getData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /addBrandsDetails:
    post:
      operationId: addBrandDetails
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addBrands
          description: addBrands
          required: true
          schema:
            $ref: '#/definitions/addBrandsData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /updateBrands:
    post:
      operationId: updateBrands
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addBrands
          description: addBrands
          required: true
          schema:
            $ref: '#/definitions/addBrandsData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getBrandsById:
    post:
      operationId: getBrandsById
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addBrandss
          description: addBrandss
          required: true
          schema:
            $ref: '#/definitions/ByIdData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /deleteBrandsById:
    post:
      operationId: deleteBrandsById
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addBrands
          description: addBrands
          required: true
          schema:
            $ref: '#/definitions/ByIdData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /addDeals:
    post:
      operationId: addDeals
      x-swagger-router-controller: dashboardController
      consumes:
        - multipart/form-data
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - name: brand_name
          in: formData
          required: true
          type: string
        - name: brand_description
          in: formData
          required: true
          type: string
        - name: product_name
          in: formData
          required: true
          type: string
        - name: original_price
          in: formData
          required: true
          type: number
        - name: offer_validity
          in: formData
          required: true
          type: string
        - name: offer_percentage
          in: formData
          required: true
          type: string
        - name: min_order
          in: formData
          required: true
          type: number
        - name: brand_logo
          in: formData
          type: file
        - name: product_pic
          in: formData
          type: file
        - name: coupon_file
          in: formData
          type: file
        - name: offer_category
          in: formData
          required: true
          type: string
        - name: offer_type
          in: formData
          required: true
          type: string
        - name: up_color
          in: formData
          required: true
          type: string
        - name: down_color
          in: formData
          required: true
          type: string
        - name: offer_url
          in: formData
          required: true
          type: string
        - name: tnc
          in: formData
          required: true
          type: string
        - name: no_of_coupons
          in: formData
          required: true
          type: integer
        - name: is_active
          in: formData
          required: true
          type: integer
        - name: creator
          in: formData
          required: true
          type: string
        - name: is_brand_logo
          in: formData
          required: true
          type: integer
        - name: is_product_pic
          in: formData
          required: true
          type: integer          
        - name: is_coupon_file
          in: formData
          required: true
          type: integer 
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /updateDeals:
    post:
      operationId: updateDeals
      x-swagger-router-controller: dashboardController
      consumes:
        - multipart/form-data
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - name: id
          in: formData
          required: true
          type: string
        - name: brand_name
          in: formData
          required: true
          type: string
        - name: brand_description
          in: formData
          required: true
          type: string
        - name: product_name
          in: formData
          required: true
          type: string
        - name: original_price
          in: formData
          required: true
          type: number
        - name: offer_validity
          in: formData
          required: true
          type: string
        - name: offer_percentage
          in: formData
          required: true
          type: number
        - name: min_order
          in: formData
          required: true
          type: number
        - name: brand_logo
          in: formData
          type: file
        - name: product_pic
          in: formData
          type: file
        - name: coupon_file
          in: formData
          type: file
        - name: offer_category
          in: formData
          required: true
          type: string
        - name: offer_type
          in: formData
          required: true
          type: string
        - name: up_color
          in: formData
          required: true
          type: string
        - name: down_color
          in: formData
          required: true
          type: string
        - name: offer_url
          in: formData
          required: true
          type: string
        - name: tnc
          in: formData
          required: true
          type: string
        - name: no_of_coupons
          in: formData
          required: true
          type: integer
        - name: is_brand_logo
          in: formData
          required: true
          type: integer
        - name: is_product_pic
          in: formData
          required: true
          type: integer          
        - name: is_coupon_file
          in: formData
          required: true
          type: integer          
        - name: is_active
          in: formData
          required: true
          type: integer
        - name: updater
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getDealsById:
    post:
      operationId: getDealsById
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addDeals
          description: addDeals
          required: true
          schema:
            $ref: '#/definitions/ByIdData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /searchDeals:
    post:
      operationId: searchDeals
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addDeals
          description: addDeals
          required: true
          schema:
            $ref: '#/definitions/searchData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /searchCategory:
    post:
      operationId: searchCategory
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addDeals
          description: addDeals
          required: true
          schema:
            $ref: '#/definitions/searchData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
 
  /filterByBrand:
    post:
      operationId: filterByBrand
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addDeals
          description: addDeals
          required: true
          schema:
            $ref: '#/definitions/filterData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

 
  /searchTransactions:
    post:
      operationId: searchTransactions
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addDeals
          description: addDeals
          required: true
          schema:
            $ref: '#/definitions/searchData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /deleteDealsById:
    post:
      operationId: deleteDealsById
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: addDeals
          description: addDeals
          required: true
          schema:
            $ref: '#/definitions/ByIdData'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getBrands:
    get:
      operationId: getBrands
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getBrandsDtls:
    get:
      operationId: getBrands
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  

  /getDealsDetails:
    post:
      operationId: getDetalsDetails
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Dashboard
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: DealFilter
          description: DealFilter
          required: true
          schema:
            $ref: "#/definitions/DealFilter"
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getBannerFile:
    post:
      summary: getBannerFile
      description: getBannerFile
      operationId: getBannerFile
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Bank Config
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: BankConfig
          description: BankConfig
          required: true
          schema:
            $ref: '#/definitions/getBannerFile'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getBannerFileAdmin:
    post:
      summary: getBannerFile
      description: getBannerFile
      operationId: getBannerFileAdmin
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Bank Config
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: BankConfig
          description: BankConfig
          required: true
          schema:
            $ref: '#/definitions/getBannerFile'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /addBannerFile:
    post:
      summary: addBannerFile
      description: addBannerFile
      operationId: addBannerFile
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Bank Config
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: BankConfig
          description: BankConfig
          required: true
          schema:
            $ref: '#/definitions/BannerFile'
        
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /deleteBannerFile:
    post:
      summary: deleteBannerFile
      description: deleteBannerFile
      operationId: deleteBannerFile
      x-swagger-router-controller: dashboardController
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        -  Bank Config
      parameters:
        - in: header
          name: Authorization
          type: string
          format: Bearer
          required: true
          description: Bearer token for authentication
        - in: body
          name: BankConfig
          description: BankConfig
          required: true
          schema:
            $ref: '#/definitions/BannerFileDelete'
      responses:
        200:
          description: Successful operation
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  AnyObject:
    type: object
    properties: {}
  
  loginData:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  
  getUserSettingData:
    type: object
    properties:
      username:
        type: string
  updateuserDataData:
    type: object
    properties:
      username:
        type: string
      name:
        type: string
      avatar:
        type: string
      email:
        type: string
  changePasswordData:
    type: object
    properties:
      username:
        type: string
      oldPassword:
        type: string
      newPassword:
        type: string

  DashboardCountData:
    type: object
    properties:
      bank_name:
        type: string
  
  searchData:
    type: object
    properties:
      val:
        type: string
      
  filterData:
    type: object
    properties:
      val:
        type: string
         

  GetAllBookingData:
    type: object
    properties:
      bank_name:
        type: string
        example: "BOM"
      provider_name:
        type: string
        example: "Provider XYZ"
      date:
        type: string
        example: "2023-12-31"
      location:
        type: string
        example: "City Center"
      booking_type:
        type: string
        example: "Online"
      range_start:
        type: string
        example: "100"
      range_end:
        type: string
        example: "200"
      point_start:
        type: string
        example: "10"
      points_end:
        type: string
        example: "10"
      offer_amnt_start:
        type: string
        example: "50"
      offer_amnt_end:
        type: string
        example: "100"
      page_number:
        type: string
        example: "1"
      page_size:
        type: string
        example: "10"

  DealFilter:
    type: object
    properties:
      page_number:
        type: string
        example: "1"
      page_size:
        type: string
        example: "10"
      brand_name:
        type: string
        example: "BrandX"
      offer_category:
        type: string
        example: "2"
      offer_validity_start:
        type: string
        example: "2024-05-01"
      offer_validity_end:
        type: string
        example: "2024-05-31"
      original_price_min:
        type: string
        example: "10.00"
      original_price_max:
        type: string
        example: "100.00"
      offer_percentage_min:
        type: string
        example: "10"
      offer_percentage_max:
        type: string
        example: "50"
      min_order_min:
        type: string
        example: "1"
      min_order_max:
        type: string
        example: "10"
      coupon_counter_min:
        type: string
        example: "1"
      coupon_counter_max:
        type: string
        example: "100"
      is_active:
        type: string
        example: "1"

  getData:
    type: object
    properties:
      page_number:
        type: string
        example: "1"
      page_size:
        type: string
        example: "10"

  GetAllTrxData:
    type: object
    properties:
      bank_name:
        type: string
        example: "BOB"
      date:
        type: string
        example: "2023-12-31"
      booking_type:
        type: string
        example: ""
      PaymentTrxId:
        type: string
        example: "wf4ykdm"
      status:
        type: string
        example: "Booked"
      range_start:
        type: string
        example: "100"
      range_end:
        type: string
        example: "200"
      page_number:
        type: string
        example: "1"
      page_size:
        type: string
        example: "10"

  BankConfig:
    type: object
    properties:
      id_user:
        type: integer
        description: The ID of the user associated with the bank configuration.
        example: 123
      bankName:
        type: string
        description: Name of the bank associated with the configuration.
        example: "ABC Bank"
      ticketModule:
        type: string
        description: ticketModule.
        example: "Hotel"
      primaryColor:
        type: string
        description: Primary color for the bank's branding.
        example: "#336699"
      secondaryColor:
        type: string
        description: Secondary color for the bank's branding.
        example: "#CCCCCC"
      logoColor:
        type: string
        description: Color of the bank's logo.
        example: "#FFA500"
      interNationalCashbackAmount:
        type: number
        format: double
        description: International cashback amount for .
        example: 15.25
      nationalCashbackAmount:
        type: number
        format: double
        description: National cashback amount for .
        example: 12.00
      NewCustInterNationalCashbackAmount:
        type: number
        format: double
        description: New customer international cashback amount for .
        example: 25.00
      NewCustNationalCashbackAmount:
        type: number
        format: double
        description: New customer national cashback amount for .
        example: 20.50
      createdBy:
        type: string
        description: Creator of the bank configuration.
        example: "John Doe"
      updatedBy:
        type: string
        description: User who last updated the bank configuration.
        example: "Jane Doe"
        
  BannerFile:
    type: object
    properties:
      id_user:
        type: integer
        description: The ID of the user associated with the banner file.
        example: 123
      bankName:
        type: string
        description: Name of the bank associated with the banner file.
        example: "ABC Bank"
      ticketModule:
        type: string
        description: ticketModule.
        example: "Hotel"
      occasion:
        type: string
        description: Occasion related to the banner file.
        example: "New Year Sale"
      file_name:
        type: string
        description: Name of the file.
        example: "banner_image.jpg"
      file_data:
        type: string
        description: Base64.
        example: ""
      file_type:
        type: string
        description: Type of the file.
        example: "image/jpeg"
      file:
        type: object
        example: {}
      createdBy:
        type: string
        description: Creator of the banner file.
        example: "John Doe"
      updatedBy:
        type: string
        description: User who last updated the banner file.
        example: "Jane Doe"
  BannerFileDelete:
    type: object
    properties:
      id:
        type: integer
        description: The ID of the user associated with the banner file.
        example: 1
      ticketModule:
        type: string
        description: ticketModule.
        example: "banners"

  addDealsData:
    type: object
    properties:
      id:
        type: integer
      category:
        type: string
      brand:
        type: string
      category_name:
        type: string
      isActive:
        type: integer
      cover_image:
        type: string
      deal_heading:
        type: string
      detail_page_image:
        type: string
      min_order_value:
        type: number
      max_discount_value:
        type: number
      offer_expiry_date:
        type: string
      how_to_redeem:
        type: string
      terms_and_conditions:
        type: string
      deal_price_rs:
        type: number
        format: double
      deal_price_coins:
        type: integer
      offer_redemption_url:
        type: string
      coupon_codes_csv:
        type: string
      createdBy:
        type: string
      updatedBy:
        type: string
      cover_img_file_name:
        type: string
      cover_img_file_data:
        type: string
      cover_img_file_type:
        type: string
      detail_img_file_name:
        type: string
      detail_img_file_data:
        type: string
      detail_img_file_type:
        type: string
      coupons_img_file_name:
        type: string
      coupons_img_file_data:
        type: string
      coupons_img_file_type:
        type: string
      no_of_coupons:
        type: string
  addBrandsData:
    type: object
    properties:
      id:
        type: integer
        format: int64
      uuid:
        type: string
      brand_name:
        type: string
      category_name:
        type: string
      bank_name:
        type: string
      logo_image:
        type: string
      logo_file_name:
        type: string
      logo_file_data:
        type: string
      logo_file_type:
        type: string
      coupon_code_bg_image:
        type: string
      bg_file_name:
        type: string
      bg_file_data:
        type: string
      bg_file_type:
        type: string
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
  deleteBannerFile:
    type: object
    properties:
      bankName:
        type: string
        description: Name of the bank associated with the banner file.
        example: "ABC Bank"
      ticketModule:
        type: string
        description: ticketModule.
        example: "Hotel"
      file_name:
        type: string
        description: Name of the file.
        example: "banner_image.jpg"

  getBannerFile:
    type: object
    properties:
      bankName:
        type: string
        description: Name of the bank associated with the banner file.
        example: "ABC Bank"
      ticketModule:
        type: string
        description: ticketModule.
        example: "Hotel"
        
  dashboardData:
    type: object
    properties:
      bankName:
        type: string
        description: Name of the bank associated with the banner file.
        example: "ABC Bank"
      ticketModule:
        type: string
        description: ticketModule.
        example: "Hotel"

  ComercialConfig:
    type: object
    properties:
      sectionName:
        type: string
      internationalHotel:
        type: integer
      domesticHotel:
        type: integer
      internatinalFlight:
        type: integer
      domesticFlight:
        type: integer
      chargeValueType:
        type: string
      message:
        type: string
      createdBy:
        type: string
      updatedBy:
        type: string

  
  ByIdData:
    type: object
    properties:
      id:
        type: string
    example:
      id: "1"
      
  IdTripData:
    type: object
    properties:
      id_trip:
        type: string

  ErrorResponse:
    type: object
    properties:
      result:
        type: integer
        format: int32

externalDocs:
  description: "Figma URL"
  url: "https://www.figma.com/file/3yI5CF3eYmaiDoT9vfhnaF/Flight-Booking-Screens?type=design&node-id=0-1&mode=design"
